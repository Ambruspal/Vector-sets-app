{"version":3,"sources":["crypto (ignored)","./src/app/components/result/result.component.html","./src/app/components/result/result.component.ts","./src/app/services/http/http.service.ts","./src/environments/environment.ts","./src/app/components/initial/initial.component.ts","./src/app/components/initial/initial.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","<section class=\"container\">\r\n\r\n    <button mat-raised-button (click)=\"getLastResult()\">Get last result</button>\r\n\r\n    <section class=\"results-section\">\r\n\r\n        <div class=\"group-container\" *ngFor=\"let group of groupList\">\r\n            <p>{{group[0]}}</p>\r\n            <div class=\"values-wrapper\" *ngFor=\"let numberList of group[1]\">\r\n                <span *ngFor=\"let number of numberList\">{{number}}&emsp;</span>\r\n            </div>\r\n        </div>\r\n\r\n    </section>\r\n\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/services/http/http.service';\r\n\r\n@Component({\r\n  selector: 'app-result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css'],\r\n})\r\nexport class ResultComponent implements OnInit {\r\n  groupList: Array<any>[] = [];\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getLastResult(): void {\r\n    this.httpService.getLastResult().subscribe(\r\n      (data: any) => (this.groupList = Object.entries(data)),\r\n      (error) => {\r\n        console.log(error.message);\r\n        alert('There is no data in the database!');\r\n        window.location.reload();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n  baseUrl: string = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  send(data: any): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}`, data);\r\n  }\r\n\r\n  getLastResult(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: '/api/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem,\r\n} from '@angular/cdk/drag-drop';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpService } from 'src/app/services/http/http.service';\r\nimport { Router } from '@angular/router';\r\nimport { alea } from 'seedrandom';\r\n\r\n@Component({\r\n  selector: 'app-initial',\r\n  templateUrl: './initial.component.html',\r\n  styleUrls: ['./initial.component.css'],\r\n})\r\nexport class InitialComponent implements OnInit {\r\n  parametersForm!: FormGroup;\r\n\r\n  embeddingList: Array<number>[] = [];\r\n\r\n  dataToSend: any = {};\r\n\r\n  groupNames: string[] = [];\r\n\r\n  isDataValid?: boolean;\r\n\r\n  resetMode: boolean = false;\r\n\r\n  constructor(private httpService: HttpService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.parametersForm = new FormGroup({\r\n      seed: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d+((?=\\.)\\.\\d+)?$/),\r\n      ]),\r\n      embeddingNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d{1,}$/),\r\n      ]),\r\n      embeddingLength: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d{1,}$/),\r\n      ]),\r\n      groupNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d{1,}$/),\r\n      ]),\r\n      threshold: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d+((?=\\.)\\.\\d+)?$/),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  drop(event: CdkDragDrop<Array<number>[]>): void {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    } else {\r\n      transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n      const isEmptyGroup = Object.values(this.dataToSend).some(\r\n        (value: any) => value.length === 0\r\n      );\r\n      this.isDataValid = isEmptyGroup ? false : true;\r\n    }\r\n  }\r\n\r\n  generateGroupsAndEmbeddings(): void {\r\n    if (\r\n      this.embeddingList.length !== 0 ||\r\n      Object.keys(this.dataToSend).length !== 0\r\n    ) {\r\n      return this.resetEveryValue();\r\n    } else {\r\n      const seed = Number(this.parametersForm.value.seed);\r\n      const numberOfEmbeddings = Number(\r\n        this.parametersForm.value.embeddingNumber\r\n      );\r\n      const lengthOfEmbeddings = Number(\r\n        this.parametersForm.value.embeddingLength\r\n      );\r\n      const numberOfGroups = Number(this.parametersForm.value.groupNumber);\r\n      if (numberOfGroups > numberOfEmbeddings) {\r\n        alert(\r\n          `Invalid input:\\n\\nYou can not initialize more vector-sets (${numberOfGroups}) than the number of embeddings (${numberOfEmbeddings})!`\r\n        );\r\n        return;\r\n      }\r\n      this.generateGroups(numberOfGroups);\r\n      this.generateEmbeddings(seed, numberOfEmbeddings, lengthOfEmbeddings);\r\n      this.resetMode = this.resetMode ? false : true;\r\n    }\r\n  }\r\n\r\n  private generateGroups(numberOfGroups: number): void {\r\n    for (let k = 1; k <= numberOfGroups; k++) {\r\n      const groupName = `group_${k}`;\r\n      this.dataToSend[groupName] = [];\r\n      this.groupNames.push(groupName);\r\n    }\r\n  }\r\n\r\n  private generateEmbeddings(\r\n    seed: number,\r\n    numberOfEmbeddings: number,\r\n    lengthOfEmbeddings: number\r\n  ): void {\r\n    let newEmbedding: number[] = [];\r\n\r\n    for (let i = 1; i <= numberOfEmbeddings; i++) {\r\n      for (let j = 1; j <= lengthOfEmbeddings; j++) {\r\n        // Create random number\r\n        let randomNumberGenerator = alea(String(seed));\r\n        seed = Number(randomNumberGenerator().toFixed(2));\r\n        while (seed === 1 || seed === -1 || seed === 0) {\r\n          randomNumberGenerator = alea(String(seed));\r\n          seed = Number(randomNumberGenerator().toFixed(2));\r\n        }\r\n        // Adding \"-\" sign with 50% chance\r\n        const isNegative =\r\n          Math.floor(Math.random() * 10) + 1 <= 5 ? true : false;\r\n        if (isNegative) {\r\n          newEmbedding.push(seed * -1);\r\n        } else {\r\n          newEmbedding.push(seed);\r\n        }\r\n\r\n        if (j === lengthOfEmbeddings) {\r\n          this.embeddingList.push(newEmbedding);\r\n          newEmbedding = [];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private resetEveryValue(): void {\r\n    this.parametersForm.reset();\r\n    this.embeddingList = [];\r\n    this.dataToSend = {};\r\n    this.groupNames = [];\r\n    this.resetMode = false;\r\n    this.isDataValid = false;\r\n  }\r\n\r\n  sendData(): void {\r\n    this.httpService\r\n      .send({\r\n        group: this.dataToSend,\r\n        threshold: Number(this.parametersForm.value.threshold),\r\n      })\r\n      .subscribe(\r\n        () => {\r\n          console.log('Data has been successfully saved');\r\n          this.router.navigate(['result']);\r\n        },\r\n        (error) => {\r\n          console.log(error.message);\r\n          alert(error.message);\r\n          window.location.reload();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<section class=\"container\">\r\n\r\n    <section class=\"parameter-section\">\r\n        <form class=\"parameter-container\" [formGroup]=\"parametersForm\" (ngSubmit)=\"generateGroupsAndEmbeddings()\">\r\n            <div class=\"parameter\">\r\n                <label for=\"seed\">Random seed</label>\r\n                <input type=\"text\" id=\"seed\" formControlName=\"seed\">\r\n            </div>\r\n            <div class=\"parameter\">\r\n                <label for=\"embedding-number\">Number of<br>embeddings</label>\r\n                <input type=\"text\" id=\"embedding-number\" formControlName=\"embeddingNumber\">\r\n            </div>\r\n            <div class=\"parameter\">\r\n                <label for=\"embedding-length\">Length of<br>embeddings</label>\r\n                <input type=\"text\" id=\"embedding-length\" formControlName=\"embeddingLength\">\r\n            </div>\r\n            <div class=\"parameter\">\r\n                <label for=\"vector-group-number\">Number of<br>vector-sets</label>\r\n                <input type=\"text\" id=\"vector-group-number\" formControlName=\"groupNumber\">\r\n            </div>\r\n            <div class=\"parameter\">\r\n                <label for=\"threshold\">Threshold value</label>\r\n                <input type=\"text\" id=\"threshold\" formControlName=\"threshold\">\r\n            </div>\r\n            <div class=\"buttons-wrapper\">\r\n                <button mat-raised-button *ngIf=\"!resetMode\" type=\"submit\" [disabled]=\"!parametersForm.valid\">Generate\r\n                    embeddings</button>\r\n                <button mat-raised-button *ngIf=\"resetMode\" type=\"submit\" [disabled]=\"!parametersForm.valid\">Reset</button>\r\n                <button mat-raised-button type=\"button\" [disabled]=\"!isDataValid || !resetMode\" (click)=\"sendData()\">Save data</button>\r\n            </div>\r\n        </form>\r\n    </section>\r\n\r\n    <section class=\"drop-lists-section\" cdkDropListGroup>\r\n        <section class=\"embedding-section\" cdkDropList [cdkDropListData]=\"embeddingList\" (cdkDropListDropped)=\"drop($event)\">\r\n            <div class=\"generated-values-wrapper\" *ngFor=\"let numberList of embeddingList\" cdkDrag>\r\n                <span *ngFor=\"let number of numberList\">{{number}}&emsp;</span>\r\n            </div>\r\n        </section>\r\n        <section class=\"initial-groups-section\">\r\n            <div class=\"group-container\" *ngFor=\"let key of groupNames\" cdkDropList [cdkDropListData]=\"dataToSend[key]\" (cdkDropListDropped)=\"drop($event)\">\r\n                <p>{{key}}</p>\r\n                <div class=\"chosen-values-wrapper\" *ngFor=\"let numberList of dataToSend[key]\" cdkDrag>\r\n                    <span *ngFor=\"let number of numberList\">{{number}}&emsp;</span>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </section>\r\n\r\n</section>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cluster-test';\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav mode=\"side\" opened>\r\n        <mat-nav-list>\r\n            <a mat-list-item routerLink='/initial'>Generate data</a>\r\n            <a mat-list-item routerLink='/result'>Result</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <main>\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { InitialComponent } from './components/initial/initial.component';\r\nimport { ResultComponent } from './components/result/result.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, InitialComponent, ResultComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InitialComponent } from './components/initial/initial.component';\r\nimport { ResultComponent } from './components/result/result.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'initial', component: InitialComponent },\r\n  { path: 'result', component: ResultComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  imports: [MatSidenavModule, MatListModule, MatButtonModule, DragDropModule],\r\n  exports: [MatSidenavModule, MatListModule, MatButtonModule, DragDropModule],\r\n})\r\nexport class MaterialModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}